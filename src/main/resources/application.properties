# Server Port
server.port=8080

# 소스파일에 변화가 있을 때 자동으로 서버 재 시작 설정
spring.devtools.restart.enabled=true

# 정적 리소스에 변화가 있을 때 바로 반영한다.
spring.devtools.livereload.enabled=true

# thymeleaf 참조 경로
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# thymeleaf에 대한 캐시를 남기지 않는다. cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false

# templates 디렉토리에 파일이 있는지 없는지 체크, 없으면 에러를 발생시킨다.
spring.thymeleaf.check-template=true

# DataBase 연결 정보
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.jdbc-url=jdbc:mariadb://115.85.180.233:3306/springbootdb?useUnicode=yes&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=Asia/Seoul
# log4jdbc 로 변경
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.jdbc-url=jdbc:log4jdbc:mariadb://115.85.180.233:3306/springbootdb?useUnicode=yes&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=Asia/Seoul
spring.datasource.username=sa
spring.datasource.password=6h5g4f#D@S!A

# 연결 여부 확인을 위한 테스트 쿼리
spring.datasource.hikari.connection-test-query=SELECT 1

# 로깅 대상(개발/배포) 배포시에는 local -> prod
spring.profiles.active=local
logging.config=classpath:logback-${spring.profiles.active}.xml

# 매핑할 모델의 패키지 경로 (mybatis 매핑 type 을 짧게 쓰기 위한 설정)
mybatis.type-aliases-package=com.template.springboot.model

# mapper.xml 위치 명시
mybatis.mapper-locations=classpath:mybatis/mapper/**/*.xml